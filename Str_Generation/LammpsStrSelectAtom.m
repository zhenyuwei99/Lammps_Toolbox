function [varargout] = LammpsStrSelectAtom(varargin)
%% Description
%
% *Command*:
% data_atom_selected = LammpsStrSelectAtom(data,select_mode,select_arg)
%
% *Input*:
% data          :   structure that generated by function LammpsStrGenerate.
% select_mode   :   cylinder are currently supported
% select_arg    :   1 cylinder: radius and direction of axis. e.g: ['3 z']

%% Supporting Info

Select_Mode     =   ["cylinder"];
Select_Arg      =   [2,1];            % # of args for each modes and postion of last int variable in the arg;

%% Reading Input

data            =   varargin{1};
select_mode     =   find(varargin{2} == Select_Mode);
input_arg       =   split(varargin{3});
for arg = 1 : Select_Arg(select_mode)
    if arg <= Select_Arg(select_mode,2)
        select_arg(arg) = str2num(input_arg{arg});
    else
        select_arg(arg) = input_arg{arg} - 119;
    end
end

%% Selecting Atom ID

coord                       =   data.data_atom(:,5:7);
coord_mean                  =   mean(coord,1);
coord(:,select_arg(2))      =   [];
coord_mean(select_arg(2)) =   [];

for dim = 1 : 2
    [~,ind] = min(reshape(abs(bsxfun(@minus,coord,coord_mean(dim))),numel(coord),[]));
    coord_center(dim)   =   coord(ind2sub(size(coord),ind));
end


num_atom_selected           =   0;

for atom = 1 : data.num_atoms
    dist = sqrt((coord(atom,:)-coord_center) * (coord(atom,:)-coord_center)');
    if dist <= select_arg(1)
        num_atom_selected = num_atom_selected + 1;
        atom_selected(num_atom_selected) = atom;
    end
end

%% Finding Postion of Bonds infomation

try 
    data.data_bond;
    flag_bond = 1;
catch
    flag_bond = 0;
end

if flag_bond == 1
    num_bond_selected   =   1;
    for atom = 1 : num_atom_selected
        temp = data.data_bond(:,3) == atom_selected(atom) | data.data_bond(:,4) == atom_selected(atom);
        temp = find(temp);
        bond_selected(num_bond_selected:num_bond_selected+length(temp)-1) = temp;
        num_bond_selected = num_bond_selected + length(temp);
    end
    try
        bond_selected;                                  % In case no bond is selected
        bond_selected = unique(bond_selected);          % Two atoms of one bond are deleted in the same time will cause recalculation in bond selection.
        num_bond_selected = length(bond_selected);
    catch
        flag_bond = 0;
    end
end

%% Finding Postion of Angles infomation

try 
    data.data_angle;
    flag_angle = 1;
catch
    flag_angle = 0;
end

if flag_angle == 1
    num_angle_selected   =   1;
    for atom = 1 : num_atom_selected
        temp = data.data_angle(:,3) == atom_selected(atom) | data.data_angle(:,4) == atom_selected(atom) | data.data_angle(:,5) == atom_selected(atom);
        temp = find(temp);
        angle_selected(num_angle_selected:num_angle_selected+length(temp)-1) = temp;
        num_angle_selected = num_angle_selected + length(temp);
    end
    try
        angle_selected;
        angle_selected = unique(angle_selected);          % Same reason as shown in Bonds Finding Part
        num_angle_selected = length(angle_selected);
    catch
        flag_angle = 0;
    end
end

%% ---------------------Output-----------------------------
% Atoms Info
varargout{1}.atom_selected          =   atom_selected;
varargout{1}.num_atom_selected      =   num_atom_selected;
% Bonds Info
if flag_bond
    varargout{1}.bond_selected      =   bond_selected;
    varargout{1}.num_bond_selected  =   num_bond_selected;
end
% Angles Info
if flag_angle
    varargout{1}.angle_selected         =   angle_selected;
    varargout{1}.num_angle_selected     =   num_angle_selected;
end